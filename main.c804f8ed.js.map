{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","rows","querySelectorAll","scoreElement","buttonElement","startMessage","winMessage","loseMessage","game","win","lose","process","firstMove","isMoved","freeCells","score","gameField","update","map","row","rowIndex","cell","cellIndex","children","textContent","className","classList","remove","add","disabled","style","opacity","getRandomIndex","max","Math","floor","random","addNumber","probability","newPosition","emptyCoords","push","length","transpose","matrix","col","i","findPair","losing","moveRight","mergedCells","sort","current","prev","moveLeft","merged小ells","addEventListener","action","target","matches","key"],"mappings":"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","file":"main.c804f8ed.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst rows = document.querySelectorAll('.field-row');\nconst scoreElement = document.querySelector('.game-score');\nconst buttonElement = document.querySelector('.start');\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst game = {\n  win: false,\n  lose: false,\n  process: false,\n  firstMove: false,\n  isMoved: false,\n  freeCells: 16,\n  score: 0,\n  gameField: [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  update() {\n    this.gameField.map((row, rowIndex) => {\n      row.map((cell, cellIndex) => {\n        if (cell !== 0) {\n          rows[rowIndex].children[cellIndex].textContent = cell;\n\n          rows[rowIndex].children[cellIndex].className = `field-cell\n           field-cell--${cell}`;\n\n          if (cell >= 2048) {\n            this.win = true;\n          }\n        } else {\n          rows[rowIndex].children[cellIndex].textContent = '';\n          rows[rowIndex].children[cellIndex].className = `field-cell`;\n        }\n      });\n\n      scoreElement.textContent = this.score;\n    });\n\n    if (this.firstMove) {\n      buttonElement.classList.remove('start');\n      buttonElement.classList.add('restart');\n      buttonElement.classList.remove('button--hidden');\n      buttonElement.textContent = 'Restart';\n      buttonElement.disabled = false;\n      buttonElement.style.opacity = 1;\n      this.firstMove = false;\n    }\n\n    if (this.win) {\n      winMessage.classList.remove('hidden');\n    } else {\n      winMessage.classList.add('hidden');\n    }\n\n    if (this.lose) {\n      loseMessage.classList.remove('hidden');\n      loseMessage.classList.add('restart');\n    } else {\n      loseMessage.classList.add('hidden');\n      loseMessage.classList.remove('restart');\n    }\n  },\n  getRandomIndex(max) {\n    return Math.floor(Math.random() * (max + 1));\n  },\n  addNumber() {\n    const probability = Math.random();\n    const emptyCoords = [];\n    let newPosition;\n\n    if (this.isMoved) {\n      this.gameField.map((row, rowIndex) => {\n        row.map((cell, cellIndex) => {\n          if (cell === 0) {\n            emptyCoords.push([rowIndex, cellIndex]);\n          }\n        });\n      });\n\n      this.freeCells = emptyCoords.length - 1;\n\n      if (emptyCoords.length > 0) {\n        newPosition = emptyCoords[this.getRandomIndex(emptyCoords.length - 1)];\n\n        if (probability < 0.1) {\n          this.gameField[newPosition[0]][newPosition[1]] = 4;\n        } else {\n          this.gameField[newPosition[0]][newPosition[1]] = 2;\n        }\n      }\n    } else {\n\n    }\n  },\n  transpose(matrix) {\n    return matrix[0].map((col, i) => matrix.map(row => row[i]));\n  },\n  findPair(matrix) {\n    for (let rowIndex = 0; rowIndex < matrix.length; rowIndex++) {\n      for (let cellIndex = 0; cellIndex < matrix[0].length; cellIndex++) {\n        if (matrix[rowIndex][cellIndex] === matrix[rowIndex][cellIndex - 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n  losing() {\n    if (this.freeCells < 1) {\n      if (!this.findPair(this.gameField)\n        && !this.findPair(this.transpose(this.gameField))) {\n        this.lose = true;\n      }\n    }\n  },\n  moveRight() {\n    this.isMoved = false;\n\n    this.gameField.map(row => {\n      const mergedCells = [false, false, false, false];\n\n      for (let i = row.length - 1; i > 0; i--) {\n        row.sort((current, prev) => {\n          if ((current - prev) < 0) {\n            this.isMoved = true;\n          }\n\n          return current - prev;\n        });\n\n        if (row[i] === row[i - 1] && !mergedCells[i] && row[i] !== 0) {\n          row[i] = row[i - 1] + row[i];\n          row[i - 1] = 0;\n          mergedCells[i] = true;\n          this.score = this.score + row[i];\n          this.isMoved = true;\n        }\n      }\n    });\n  },\n  moveLeft() {\n    this.isMoved = false;\n\n    this.gameField.map(row => {\n      const merged小ells = [false, false, false, false];\n\n      for (let i = 1; i < row.length; i++) {\n        row.sort((current, prev) => {\n          if ((prev - current) < 0) {\n            this.isMoved = true;\n          }\n\n          return prev - current;\n        });\n\n        if (row[i] === row[i - 1] && !merged小ells[i - 1] && row[i] > 0) {\n          row[i - 1] = row[i - 1] + row[i];\n          row[i] = 0;\n          merged小ells[i - 1] = true;\n          this.score = this.score + row[i - 1];\n          this.isMoved = true;\n        }\n      }\n    });\n  },\n};\n\nbody.addEventListener('click', action => {\n  if (!action.target.matches('.start') && !action.target.matches('.restart')) {\n    return;\n  }\n\n  if (action.target.matches('.start')) {\n    startMessage.classList.add('hidden');\n    buttonElement.classList.add('button--hidden');\n    buttonElement.disabled = true;\n    buttonElement.style.opacity = 0.5;\n    game.process = true;\n    game.isMoved = true;\n  }\n\n  if (action.target.matches('.restart')) {\n    buttonElement.classList.add('button--hidden');\n    game.win = false;\n    game.lose = false;\n    buttonElement.disabled = true;\n    buttonElement.style.opacity = 0.5;\n    game.score = 0;\n\n    game.gameField = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n  }\n\n  game.addNumber();\n  game.addNumber();\n  game.update();\n});\n\nbody.addEventListener('keydown', action => {\n  if (action.key !== 'ArrowRight' || !game.process || game.win || game.lose) {\n    return;\n  }\n\n  game.firstMove = true;\n  game.moveRight();\n  game.addNumber();\n  game.losing();\n  game.update();\n});\n\nbody.addEventListener('keydown', action => {\n  if (action.key !== 'ArrowLeft' || !game.process || game.win || game.lose) {\n    return;\n  }\n\n  game.firstMove = true;\n  game.moveLeft();\n  game.addNumber();\n  game.losing();\n  game.update();\n});\n\nbody.addEventListener('keydown', action => {\n  if (action.key !== 'ArrowUp' || !game.process || game.win || game.lose) {\n    return;\n  }\n\n  game.firstMove = true;\n  game.gameField = game.transpose(game.gameField);\n  game.moveLeft();\n  game.gameField = game.transpose(game.gameField);\n  game.addNumber();\n  game.losing();\n  game.update();\n});\n\nbody.addEventListener('keydown', action => {\n  if (action.key !== 'ArrowDown' || !game.process || game.win || game.lose) {\n    return;\n  }\n\n  game.firstMove = true;\n  game.gameField = game.transpose(game.gameField);\n  game.moveRight();\n  game.gameField = game.transpose(game.gameField);\n  game.addNumber();\n  game.losing();\n  game.update();\n});\n"]}